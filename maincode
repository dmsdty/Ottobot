Codding 
#include <Otto9.h> //-- Otto Library version 9
Otto9 Otto;  //This is Otto!
#if defined(ARDUINO) && ARDUINO >= 100
  #include "Arduino.h"
#else
  #include <WProgram.h>
#endif

#include <Servo.h> 
//---------------------------------------------------------
//-- First step: Configure the pins where the servos are attached
/*
         ---------------
        |     O   O     |
        |---------------|
YR 3==> |               | <== YL 2
         ---------------
            ||     ||
            ||     ||
RR 5==>   -----   ------  <== RL 4
         |-----   ------|
*/
// SERVO PINs //////////////////////////////////////////////////////////////////////////////
#define PIN_YL 2 //servo[0]  left leg
#define PIN_YR 3 //servo[1]  right leg
#define PIN_RL 4 //servo[2]  left foot
#define PIN_RR 5 //servo[3]  right foot
// ULTRASONIC PINs /////////////////////////////////////////////////////////////////////////
#define PIN_Trigger  8  //TRIGGER pin (8)
#define PIN_Echo     9  //ECHO pin (9)
// BUZZER PIN //////////////////////////////////////////////////////////////////////////////
#define PIN_Buzzer  13 //BUZZER pin (13)
// SERVO ASSEMBLY PIN   /////////////////////////////////////////////////////////////////////
// to help assemble Otto's feet and legs - wire link between pin 7 and GND
#define PIN_ASSEMBLY    7   //ASSEMBLY pin (7) LOW = assembly    HIGH  = normal operation
///////////////////////////////////////////////////////////////////
//-- Global Variables -------------------------------------------//
///////////////////////////////////////////////////////////////////
int distance; // variable to store distance read from ultrasonic range finder module
bool obstacleDetected = false; // logic state for when object detected is at the distance we set
}
///////////langka////////////////////////////////////////////////////////
//-- Setup ------------------------------------------------------//
///////////////////////////////////////////////////////////////////
void setup() {
  Serial.begin(57600); 
 Otto.init(PIN_YL, PIN_YR, PIN_RL, PIN_RR, true, A6, PIN_Buzzer, PIN_Trigger, PIN_Echo); //Set the servo pins and ultrasonic pins and Buzzer pin
  pinMode(PIN_ASSEMBLY,INPUT_PULLUP); // - Easy assembly pin - LOW is assembly Mode
  //Otto wake up!
  Otto.sing(S_connection);// Otto makes a sound
  Otto.home(); // Otto moves to its ready position
  delay(500); // wait for 500 milliseconds to allow Otto to stop
// if Pin 7 is LOW then place OTTO's servos in home mode to enable easy assembly, 
// when you have finished assembling Otto, remove the link between pin 7 and GND
  while (digitalRead(PIN_ASSEMBLY) == LOW) {
    Otto.home();// Otto moves to its ready position
    Otto.sing(S_happy_short);   // sing every 5 seconds so we know OTTO is still working
    delay(5000);// wait for 5 seconds
  }
}
///////////////////////////////////////////////////////////////////
//-- Principal Loop ---------------------------------------------//
///////////////////////////////////////////////////////////////////
void loop() {
 
  otto_walk();
  otto_shake_leg ();
  otto_run();
  otto_moonwalker();
  otto_stop();
  nh.spinOnce();
  delay(1);  
}
void otto_stop(){
  Otto.walk(1,000,-1);
}  
void otto_run(){
  Otto.walk(1,400,-1);
}
void otto_walk(){
  Otto.walk(1,900,-1);
}
void otto_jump(){
  Otto.jump(1,370);
  Otto.jump(1,370);
  Otto.jump(1,370);
  Otto.jump(1,370);
}
void otto_bend(){
  Otto.bend(1,100,1);
  Otto.bend(1,100,-1);
}
void otto_crusaito(){
  Otto.crusaito(1,800,30,1);
  Otto.crusaito(1,800,30,-1);
  Otto.crusaito(1,800,30,1);
  delay(300);
}
void otto_shake_leg(){
  Otto.shakeLeg(1,700,1);
  Otto.shakeLeg(1,700,-1);
  delay(1000);
}
void otto_jitter(){
  Otto.jitter(3,1000,20);
}
void otto_moonwalker(){
  Otto.moonwalker(1,600,30,1);
  Otto.moonwalker(1,600,30,-1);
}
void otto_lompat(){
  Otto.jump(1,370);
  Otto.jump(1,370);
  Otto.jump(1,370);
  Otto.jump(1,370);
}
